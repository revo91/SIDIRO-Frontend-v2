[{"E:\\Dev\\React\\sidiro\\src\\index.tsx":"1","E:\\Dev\\React\\sidiro\\src\\reportWebVitals.ts":"2","E:\\Dev\\React\\sidiro\\src\\App.tsx":"3","E:\\Dev\\React\\sidiro\\src\\components\\Drawer.component.tsx":"4","E:\\Dev\\React\\sidiro\\src\\routes\\Drawer.routes.tsx":"5","E:\\Dev\\React\\sidiro\\src\\components\\Overview.component.tsx":"6","E:\\Dev\\React\\sidiro\\src\\i18n.ts":"7","E:\\Dev\\React\\sidiro\\src\\translations.ts":"8","E:\\Dev\\React\\sidiro\\src\\reducers\\Root.reducer.ts":"9","E:\\Dev\\React\\sidiro\\src\\reducers\\UniversalTabs.reducer.ts":"10","E:\\Dev\\React\\sidiro\\src\\actions\\UniversalTabs.action.ts":"11","E:\\Dev\\React\\sidiro\\src\\components\\UniversalTabs.component.tsx":"12","E:\\Dev\\React\\sidiro\\src\\reducers\\LanguageDialog.reducer.ts":"13","E:\\Dev\\React\\sidiro\\src\\actions\\LanguageDialog.action.ts":"14","E:\\Dev\\React\\sidiro\\src\\components\\LanguageDialog.component.tsx":"15","E:\\Dev\\React\\sidiro\\src\\components\\Powermonitor.component.tsx":"16","E:\\Dev\\React\\sidiro\\src\\components\\LineChart.component.tsx":"17","E:\\Dev\\React\\sidiro\\src\\components\\DeviceDataDialog.component.tsx":"18","E:\\Dev\\React\\sidiro\\src\\reducers\\DeviceDataDialog.reducer.ts":"19","E:\\Dev\\React\\sidiro\\src\\actions\\DeviceDataDialog.action.ts":"20","E:\\Dev\\React\\sidiro\\src\\components\\Events.component.tsx":"21","E:\\Dev\\React\\sidiro\\src\\components\\UniversalTable.component.tsx":"22","E:\\Dev\\React\\sidiro\\src\\components\\Elevation.component.tsx":"23","E:\\Dev\\React\\sidiro\\src\\components\\Reports.component.tsx":"24","E:\\Dev\\React\\sidiro\\src\\components\\BarChart.component.tsx":"25","E:\\Dev\\React\\sidiro\\src\\components\\PieChart.component.tsx":"26","E:\\Dev\\React\\sidiro\\src\\utilities\\siemensColors.ts":"27","E:\\Dev\\React\\sidiro\\src\\reducers\\Backdrop.reducer.ts":"28","E:\\Dev\\React\\sidiro\\src\\actions\\Backdrop.action.ts":"29","E:\\Dev\\React\\sidiro\\src\\components\\Backdrop.component.tsx":"30","E:\\Dev\\React\\sidiro\\src\\components\\DeviceDataDialog\\BreakerDevice.component.tsx":"31","E:\\Dev\\React\\sidiro\\src\\components\\DeviceDataDialog\\CurrentTab.component.tsx":"32","E:\\Dev\\React\\sidiro\\src\\components\\DeviceDataDialog\\OverviewTab.component.tsx":"33","E:\\Dev\\React\\sidiro\\src\\components\\Overview\\TransformerSVG.component.tsx":"34","E:\\Dev\\React\\sidiro\\src\\components\\Overview\\CircuitBreakerSVG.component.tsx":"35","E:\\Dev\\React\\sidiro\\src\\components\\Overview\\GeneratorSVG.component.tsx":"36","E:\\Dev\\React\\sidiro\\src\\components\\Overview\\CouplingBreakerSVG.component.tsx":"37","E:\\Dev\\React\\sidiro\\src\\components\\Overview\\ParametersTableSVG.component.tsx":"38","E:\\Dev\\React\\sidiro\\src\\components\\Overview\\SectionSVG.component.tsx":"39"},{"size":500,"mtime":1611564277809,"results":"40","hashOfConfig":"41"},{"size":425,"mtime":1611564277809,"results":"42","hashOfConfig":"41"},{"size":1770,"mtime":1613375290655,"results":"43","hashOfConfig":"41"},{"size":8131,"mtime":1613551377184,"results":"44","hashOfConfig":"41"},{"size":740,"mtime":1612870262805,"results":"45","hashOfConfig":"41"},{"size":5523,"mtime":1613741621915,"results":"46","hashOfConfig":"41"},{"size":2045,"mtime":1612268307219,"results":"47","hashOfConfig":"41"},{"size":3073,"mtime":1613398839843,"results":"48","hashOfConfig":"41"},{"size":565,"mtime":1613051851921,"results":"49","hashOfConfig":"41"},{"size":517,"mtime":1612947186584,"results":"50","hashOfConfig":"41"},{"size":222,"mtime":1612272726129,"results":"51","hashOfConfig":"41"},{"size":2682,"mtime":1613398743467,"results":"52","hashOfConfig":"41"},{"size":457,"mtime":1612869056672,"results":"53","hashOfConfig":"41"},{"size":169,"mtime":1612340177186,"results":"54","hashOfConfig":"41"},{"size":2201,"mtime":1612511149322,"results":"55","hashOfConfig":"41"},{"size":666,"mtime":1612961312956,"results":"56","hashOfConfig":"41"},{"size":2260,"mtime":1613388378323,"results":"57","hashOfConfig":"41"},{"size":2000,"mtime":1613375540363,"results":"58","hashOfConfig":"41"},{"size":471,"mtime":1612869051349,"results":"59","hashOfConfig":"41"},{"size":179,"mtime":1612510703165,"results":"60","hashOfConfig":"41"},{"size":1715,"mtime":1613029709365,"results":"61","hashOfConfig":"41"},{"size":1511,"mtime":1613394438603,"results":"62","hashOfConfig":"41"},{"size":632,"mtime":1612875968773,"results":"63","hashOfConfig":"41"},{"size":4355,"mtime":1613551505279,"results":"64","hashOfConfig":"41"},{"size":1554,"mtime":1613551442779,"results":"65","hashOfConfig":"41"},{"size":1532,"mtime":1613050189883,"results":"66","hashOfConfig":"41"},{"size":1564,"mtime":1613657407619,"results":"67","hashOfConfig":"41"},{"size":419,"mtime":1613052032862,"results":"68","hashOfConfig":"41"},{"size":140,"mtime":1613051432655,"results":"69","hashOfConfig":"41"},{"size":730,"mtime":1613051990939,"results":"70","hashOfConfig":"41"},{"size":622,"mtime":1613398516334,"results":"71","hashOfConfig":"41"},{"size":2767,"mtime":1613397709990,"results":"72","hashOfConfig":"41"},{"size":3058,"mtime":1613462569882,"results":"73","hashOfConfig":"41"},{"size":1968,"mtime":1613729439990,"results":"74","hashOfConfig":"41"},{"size":2577,"mtime":1613733544702,"results":"75","hashOfConfig":"41"},{"size":1528,"mtime":1613731502612,"results":"76","hashOfConfig":"41"},{"size":4632,"mtime":1613731620115,"results":"77","hashOfConfig":"41"},{"size":2083,"mtime":1613733530464,"results":"78","hashOfConfig":"41"},{"size":590,"mtime":1613741530382,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"vdwtrg",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"82"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"82"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"82"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"E:\\Dev\\React\\sidiro\\src\\index.tsx",[],["162","163"],"E:\\Dev\\React\\sidiro\\src\\reportWebVitals.ts",[],"E:\\Dev\\React\\sidiro\\src\\App.tsx",[],"E:\\Dev\\React\\sidiro\\src\\components\\Drawer.component.tsx",[],"E:\\Dev\\React\\sidiro\\src\\routes\\Drawer.routes.tsx",[],"E:\\Dev\\React\\sidiro\\src\\components\\Overview.component.tsx",["164","165"],"import React from 'react';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport { setDeviceDataDialogOpen } from '../actions/DeviceDataDialog.action';\r\nimport { useDispatch } from 'react-redux';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useTranslation } from 'react-i18next';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { TransformerSVG } from './Overview/TransformerSVG.component';\r\nimport { CircuitBreakerSVG } from './Overview/CircuitBreakerSVG.component';\r\nimport { CSSProperties } from '@material-ui/core/styles/withStyles';\r\nimport { GeneratorSVG } from './Overview/GeneratorSVG.component';\r\nimport { CouplingBreakerSVG } from './Overview/CouplingBreakerSVG.component';\r\nimport { siemensColors } from '../utilities/siemensColors';\r\nimport { SectionSVG } from './Overview/SectionSVG.component';\r\n\r\n//common constants for SVGs to import /////////////////\r\nexport const lineLength = 7;\r\nexport const circleRadius = 0.5 * lineLength;\r\n\r\nconst lineStyle: CSSProperties = {\r\n  stroke: '#000000',\r\n  strokeWidth: lineLength / 25,\r\n  strokeLinecap: 'round'\r\n}\r\nconst circleStyle: CSSProperties = {\r\n  ...lineStyle,\r\n  fill: 'none'\r\n}\r\nconst paramsTableTitleStyle: CSSProperties = {\r\n  stroke: siemensColors.blueDark,\r\n  strokeWidth: 0.1,\r\n  fill: siemensColors.blueDark,\r\n}\r\nconst infeedsNameStyle: CSSProperties = {\r\n  fontSize: `${circleRadius / 15}em`,\r\n  fill: siemensColors.tealDark,\r\n  textAnchor: 'end',\r\n  dominantBaseline: 'hanging',\r\n  letterSpacing: '-0.05em'\r\n}\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    lineStyle: {\r\n      ...lineStyle\r\n    },\r\n    circleStyle: {\r\n      ...circleStyle\r\n    },\r\n    lineStyleVoltageApplied: {\r\n      ...lineStyle,\r\n      stroke: '#10b115',\r\n    },\r\n    circleStyleVoltageApplied: {\r\n      ...circleStyle,\r\n      stroke: '#10b115',\r\n    },\r\n    generatorSymbolTextStyle: {\r\n      fontSize: `${circleRadius / 10}em`,\r\n      fill: siemensColors.tealDark,\r\n      textAnchor: 'middle',\r\n      dominantBaseline: 'central'\r\n    },\r\n    paramsTableTitleStyle: {\r\n      ...paramsTableTitleStyle\r\n    },\r\n    paramsTableRowStyle: {\r\n      ...paramsTableTitleStyle,\r\n      fill: '#d6f7ff',\r\n    },\r\n    paramsTableTitleTextStyle: {\r\n      fontSize: `${circleRadius / 32}em`,\r\n      fill: '#ffffff',\r\n      textAnchor: 'middle',\r\n      dominantBaseline: 'central',\r\n      letterSpacing: '-0.02em'\r\n    },\r\n    paramsTableRowTextStyle: {\r\n      fontSize: `${circleRadius / 36}em`,\r\n      fill: '#000000',\r\n      textAnchor: 'end',\r\n      dominantBaseline: 'central',\r\n      letterSpacing: '-0.02em',\r\n    },\r\n    infeedsNameStyle: {\r\n      ...infeedsNameStyle\r\n    },\r\n    circuitBreakersNameStyle: {\r\n      ...infeedsNameStyle,\r\n      fontSize: `${circleRadius / 18}em`,\r\n    }\r\n  }));\r\n///////////////////////////////////////////////////\r\n\r\nexport const Overview = () => {\r\n  const dispatch = useDispatch();\r\n  const { t } = useTranslation();\r\n  //for testing purposes///////////////////////////\r\n  const [sampleParams, setSampleParams] = React.useState<{ activePower: number, reactivePower: number, powerFactor: number, current: number }>({ activePower: 100, reactivePower: 50, powerFactor: 0.88, current: 10 })\r\n\r\n  React.useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setSampleParams({\r\n        ...sampleParams,\r\n        activePower: parseFloat((Math.random() * 1000).toFixed(2)),\r\n        reactivePower: parseFloat((Math.random() * 100).toFixed(2)),\r\n        powerFactor: parseFloat((Math.random()).toFixed(2)),\r\n        current: parseFloat((Math.random() * 10).toFixed(2))\r\n      })\r\n    }, 2000)\r\n    return () => clearInterval(interval)\r\n  }, [sampleParams])\r\n  ////////////////////////////////////////////////\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <button onClick={() => dispatch(setDeviceDataDialogOpen(true))}>open DeviceDataDialog</button>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <svg viewBox={`0 0 150 70`} width='100%'>\r\n            <TransformerSVG\r\n              x={10}\r\n              y={1}\r\n              name='TR1'\r\n              tableName='Trafo TR1'\r\n              activePower={sampleParams.activePower}\r\n              reactivePower={sampleParams.reactivePower}\r\n              powerFactor={sampleParams.powerFactor}\r\n              voltageApplied />\r\n            <CircuitBreakerSVG\r\n              x={40}\r\n              y={1}\r\n              state='open'\r\n              name='cb1'\r\n              tableName='B1A komp.'\r\n              activePower={sampleParams.activePower}\r\n              current={sampleParams.current}\r\n              powerFactor={sampleParams.powerFactor}\r\n              voltageApplied\r\n            />\r\n            <GeneratorSVG\r\n              x={70}\r\n              y={1}\r\n              name='GEN1'\r\n              tableName='Generator'\r\n              activePower={sampleParams.activePower}\r\n              reactivePower={sampleParams.reactivePower}\r\n              powerFactor={sampleParams.powerFactor}\r\n              voltageApplied\r\n            />\r\n            <CouplingBreakerSVG\r\n              x={100}\r\n              y={1}\r\n              state='open'\r\n              name='Q1'\r\n              voltageApplied\r\n            />\r\n            <SectionSVG\r\n              x={40}\r\n              y={60}\r\n              length={50}\r\n              voltageApplied\r\n            />\r\n          </svg>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  )\r\n}","E:\\Dev\\React\\sidiro\\src\\i18n.ts",[],"E:\\Dev\\React\\sidiro\\src\\translations.ts",[],"E:\\Dev\\React\\sidiro\\src\\reducers\\Root.reducer.ts",[],"E:\\Dev\\React\\sidiro\\src\\reducers\\UniversalTabs.reducer.ts",[],"E:\\Dev\\React\\sidiro\\src\\actions\\UniversalTabs.action.ts",[],"E:\\Dev\\React\\sidiro\\src\\components\\UniversalTabs.component.tsx",[],"E:\\Dev\\React\\sidiro\\src\\reducers\\LanguageDialog.reducer.ts",[],"E:\\Dev\\React\\sidiro\\src\\actions\\LanguageDialog.action.ts",[],"E:\\Dev\\React\\sidiro\\src\\components\\LanguageDialog.component.tsx",[],"E:\\Dev\\React\\sidiro\\src\\components\\Powermonitor.component.tsx",["166"],"import React from 'react';\r\nimport { LineChart } from './LineChart.component';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useTranslation } from 'react-i18next';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nexport const Powermonitor = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={12}>\r\n          <Typography variant='h2' gutterBottom>{t('powermonitorPage.title')}</Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          \r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  )\r\n}","E:\\Dev\\React\\sidiro\\src\\components\\LineChart.component.tsx",[],"E:\\Dev\\React\\sidiro\\src\\components\\DeviceDataDialog.component.tsx",[],"E:\\Dev\\React\\sidiro\\src\\reducers\\DeviceDataDialog.reducer.ts",[],"E:\\Dev\\React\\sidiro\\src\\actions\\DeviceDataDialog.action.ts",[],"E:\\Dev\\React\\sidiro\\src\\components\\Events.component.tsx",[],"E:\\Dev\\React\\sidiro\\src\\components\\UniversalTable.component.tsx",[],"E:\\Dev\\React\\sidiro\\src\\components\\Elevation.component.tsx",[],"E:\\Dev\\React\\sidiro\\src\\components\\Reports.component.tsx",[],"E:\\Dev\\React\\sidiro\\src\\components\\BarChart.component.tsx",[],"E:\\Dev\\React\\sidiro\\src\\components\\PieChart.component.tsx",[],"E:\\Dev\\React\\sidiro\\src\\utilities\\siemensColors.ts",[],"E:\\Dev\\React\\sidiro\\src\\reducers\\Backdrop.reducer.ts",[],"E:\\Dev\\React\\sidiro\\src\\actions\\Backdrop.action.ts",[],"E:\\Dev\\React\\sidiro\\src\\components\\Backdrop.component.tsx",[],"E:\\Dev\\React\\sidiro\\src\\components\\DeviceDataDialog\\BreakerDevice.component.tsx",[],"E:\\Dev\\React\\sidiro\\src\\components\\DeviceDataDialog\\CurrentTab.component.tsx",["167"],"import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport { LineChart } from '../LineChart.component';\r\nimport { siemensColors } from '../../utilities/siemensColors'; \r\nimport { DatePicker, TimePicker } from \"@material-ui/pickers\";\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    timePickersContainer: {\r\n      backgroundColor: '#dbdbdb',\r\n      marginTop: theme.spacing(2),\r\n      paddingTop: theme.spacing(2),\r\n      paddingBottom: theme.spacing(2),\r\n    }\r\n  }),\r\n);\r\n\r\nexport const CurrentTab = () => {\r\n  const [sampleTimeSeriesData, setSampleTimeSeriesData] = React.useState<Array<{ t: number | Date, y: number }>>([{ t: new Date(2021, 1, 1), y: 10 }, { t: new Date(2021, 1, 5), y: 10 }, { t: new Date(2021, 1, 9), y: 10 }])\r\n  const [dateFrom, changeDateFrom] = React.useState<Date | null>(new Date());\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <LineChart\r\n            chartTitle=\"something\"\r\n            data={{\r\n              datasets: [\r\n                {\r\n                  label: \"dataset1\",\r\n                  backgroundColor: siemensColors.tealLight,\r\n                  borderColor: siemensColors.tealLight,\r\n                  fill: false,\r\n                  lineTension: 0,\r\n                  data: sampleTimeSeriesData\r\n                },\r\n                {\r\n                  label: \"dataset2\",\r\n                  backgroundColor: siemensColors.yellowDark,\r\n                  borderColor: siemensColors.yellowDark,\r\n                  fill: false,\r\n                  lineTension: 0,\r\n                  data: [{ t: new Date(2021, 1, 1), y: 5 }, { t: new Date(2021, 1, 5), y: 7 }, { t: new Date(2021, 1, 9), y: 6 }]\r\n                }\r\n              ]\r\n            }} />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container spacing={2} className={classes.timePickersContainer}>\r\n        <Grid item xs={12} md={6}>\r\n          <DatePicker\r\n            variant='static'\r\n            autoOk\r\n            label={t('eventsPage.dateFromLabel')}\r\n            value={dateFrom}\r\n            onChange={changeDateFrom}\r\n            fullWidth\r\n            disableFuture\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TimePicker\r\n            ampm={false}\r\n            variant='static'\r\n            autoOk\r\n            label={t('eventsPage.dateFromLabel')}\r\n            value={dateFrom}\r\n            onChange={changeDateFrom}\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  )\r\n}","E:\\Dev\\React\\sidiro\\src\\components\\DeviceDataDialog\\OverviewTab.component.tsx",[],"E:\\Dev\\React\\sidiro\\src\\components\\Overview\\TransformerSVG.component.tsx",[],"E:\\Dev\\React\\sidiro\\src\\components\\Overview\\CircuitBreakerSVG.component.tsx",[],"E:\\Dev\\React\\sidiro\\src\\components\\Overview\\GeneratorSVG.component.tsx",[],"E:\\Dev\\React\\sidiro\\src\\components\\Overview\\CouplingBreakerSVG.component.tsx",[],"E:\\Dev\\React\\sidiro\\src\\components\\Overview\\ParametersTableSVG.component.tsx",[],"E:\\Dev\\React\\sidiro\\src\\components\\Overview\\SectionSVG.component.tsx",[],{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","severity":1,"message":"173","line":5,"column":8,"nodeType":"174","messageId":"175","endLine":5,"endColumn":18},{"ruleId":"172","severity":1,"message":"176","line":97,"column":11,"nodeType":"174","messageId":"175","endLine":97,"endColumn":12},{"ruleId":"172","severity":1,"message":"177","line":2,"column":10,"nodeType":"174","messageId":"175","endLine":2,"endColumn":19},{"ruleId":"172","severity":1,"message":"178","line":21,"column":32,"nodeType":"174","messageId":"175","endLine":21,"endColumn":55},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"@typescript-eslint/no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","'t' is assigned a value but never used.","'LineChart' is defined but never used.","'setSampleTimeSeriesData' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]